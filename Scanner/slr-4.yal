(* Lexer para Gramática No. 1 - Expresiones aritméticas simples para variables *)

(* Introducir cualquier header aqui *)

let delim = [' ''\t''\n']
let ws = delim+
let letter = ['A'-'Z''a'-'z']
let str = (_)*
let digit = ['0'-'9']
let digits = digit+
let id = letter(letter|str|digit)*
let number = digits('.'digits)?('E'['+''-']?digits)?

rule tokens = 
    ws        {WHITESPACE}
  | id        {ID}               (* Cambie por una acción válida, que devuelva el token *)
  | number    {NUMBER}
  | ';'       {SEMICOLON}
  | ":="      {ASSIGNOP}
  | '<'       {LT}
  | '='       {EQ}
  | '+'       {PLUS}
  | '-'       {MINUS}
  | '*'       {TIMES}
  | '/'       {DIV}
  | '('       {LPAREN}
  | ')'       {RPAREN}




(* Introducir cualquier trailer aqui *)